name: CI/CD Workflow

on:
  pull_request:
    types:
      - ready_for_review  # Cuando la PR está lista para revisión
      - synchronize       # Cuando se actualiza una PR lista para merge
      - reopened          # Cuando se reabre una PR

  push:
    branches:
      - main
    tags:
      - 'release-*'  # Solo ejecuta el workflow para tags de release

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run tests
        working-directory: ./frontend
        run: npm run test

  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/release-')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Extract release version
        run: |
          ref=${GITHUB_REF#refs/tags/}
          sanitized_ref=$(echo "$ref" | sed 's/\//-/g')
          echo "RELEASE_NAME=$sanitized_ref" >> $GITHUB_ENV

      - name: Log in to DockerHub
        run: |
          docker login -u alexrguez9 -p ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image frontend
        run: |
          docker build -t alexrguez9/deportes_urjc:frontend-${{ env.RELEASE_NAME }} ./frontend
          docker push alexrguez9/deportes_urjc:frontend-${{ env.RELEASE_NAME }}

      - name: Build and push Docker image backend
        run: |
          docker build -t alexrguez9/deportes_urjc:backend-${{ env.RELEASE_NAME }} ./backend
          docker push alexrguez9/deportes_urjc:backend-${{ env.RELEASE_NAME }}
